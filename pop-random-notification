#!/bin/bash

print_help_and_exit () {
  echo "Usage: random-notifications <title txt file> [body text file] [icon path file]"
  echo "line n of each file will be picked and used to send notification"
  exit $1
}

if [[ $1 == "-h" || $1 == "--help" ]]; then
  print_help_and_exit 0
fi

# Find current dir, copied from
# http://stackoverflow.com/questions/59895/can-a-bash-script-tell-which-directory-it-is-stored-in
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

if [[ -z ${1+x} ]]; then print_help_and_exit 1; else title_txt="$1"; fi
if [[ -z ${2+x} ]]; then body_txt="/dev/null"; else body_txt="$2"; fi
if [[ -z ${3+x} ]]; then iconpath_txt="/dev/null"; else iconpath_txt="$3"; fi

mapfile -t titlearray < "$title_txt" # title = summary
mapfile -t bodyarray < "$body_txt"
mapfile -t iconpatharray < "$iconpath_txt"
size=${#titlearray[@]}

rand=$(( ( RANDOM % size )  + 1 ))

#RED='\033[1;33m'
#PURPLE='\033[0;35m'
#NC='\033[0m' # No Color
#bold=$(tput bold)
#normal=$(tput sgr0)

# notify-send [OPTION...] <SUMMARY> [BODY] - create a notification
notify-send --icon="${iconpatharray[rand-1]}" "${titlearray[rand-1]}" "${bodyarray[rand-1]}"
