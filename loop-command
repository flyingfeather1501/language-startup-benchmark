#!/bin/bash

loop_init_var () {
  OPTIND=1
  loop_sleep_time=5m
  loop_skip_chance=0
  loop_command=""
}

loop_print_help () {
  echo "
Usage: loop-command <sleep time> <chance of not running> <command> [command args...]

Arguments:
 sleep time: passed to the sleep builtin
 chance of not running: compared against \$RANDOM, so it's out of 32767

Options:
 -h or -?                 Show help (this message)
"
}

loop_getopts () {
  while getopts "h?r" loop_opt; do
    case "$loop_opt" in
    h|\?)
      loop_print_help
      exit 0
      ;;
    esac
  done
}

loop_stop () {
  echo "
Terminating"
  exit 0
}

# if $2 is absent
if [[ -z ${2+x} ]]; then
  loop_print_help
  exit 1
fi

# run loop_stop when receiving INT i.e. Ctrl-C
trap loop_stop INT

loop_init_var
loop_getopts "$@"

while true; do
  loop_sleep_time=$1
  loop_skip_chance=$2
  loop_command=$3
  [[ $((RANDOM>loop_skip_chance)) == 1 ]] && $loop_command "${@:4}"
  sleep $loop_sleep_time
done
