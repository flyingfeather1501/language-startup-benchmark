#!/bin/bash
# See https://www.epifocal.net/blog/video-stabilization-with-ffmpeg
OPTIND=1

# init vars
input_file=none
output_file=none
step_size=6
shakiness=3
accuracy=9
zoom=1
smoothing=30

print_help () {
  echo "
 Usage:
 quick_deshake.sh -i INPUT -o OUTPUT [OPTIONS]

 Options:
 -i        input file
 -o        output file
 -p        vidstabdetect=stepsize=6   (step 1)
 -s        vidstabdetect=shakiness=3  (step 1)
 -a        vidstabdetect=accuracy=9   (step 1)
 -z        vidstabtransform=zoom=1    (step 2)
 -m        vidstabtransform=smoothing=30  (step 2)
 -h        print help (this message)
"
}


while getopts "i:o:p:s:a:z:m:h?" opt; do
  case "$opt" in
    h)
      print_help
      exit 0
      ;;
    i)
      input_file="$OPTARG"
      ;;
    o)
      output_file="$OPTARG"
      ;;
    p)
      step_size="$OPTARG"
      ;;
    s)
      shakiness="$OPTARG"
      ;;
    a)
      accuracy="$OPTARG"
      ;;
    z)
      zoom="$OPTARG"
      ;;
    m)
      smoothing="$OPTARG"
      ;;
  esac
done

# commands
echo Step 1, calculate vectors
ffmpeg -i $input_file -vf vidstabdetect=stepsize=${step_size}:shakiness=${shakiness}:accuracy=${accuracy}:result=/tmp/transform_vectors.trf -f null -

echo Step 2, transcode video using data from step 1
ffmpeg -i $input_file -vf vidstabtransform=input=/tmp/transform_vectors.trf:zoom=${zoom}:smoothing=${smoothing},unsharp=5:5:0.8:3:3:0.4 -c:v libx264 -preset slow -tune film -crf 20 -c:a copy $output_file
