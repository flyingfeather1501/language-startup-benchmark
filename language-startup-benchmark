#!/bin/bash
# language startup time benchmark
# thanks Rosetta Code for a convenient Hello World listing
#
# For compiled languages, I'm measuring the speed the compiled executable runs.
#
# I'm taking the "real" field in bash's "time" output
# (Specifically, TIMEFORMAT="%3R")

# compiling functions
source compile.bash

# slightly easier to read
quiet () {
    "$@" >/dev/null 2>/dev/null
}

# time the command and format the result
report_time () {
    TIMEFORMAT="%3R"
    language="$1"; shift 1
    tmp_time=$(mktemp)
    tmp_cmd_output=$(mktemp)

    # { time stuff }: output of stuff -> stdout, time -> stderr
    if ! { time "$@" 2>/dev/null; } > "$tmp_cmd_output" 2> "$tmp_time"
    then
        error "$* failed"
        return
    fi

    time_seconds=$(cat "$tmp_time")
    output=$(cat "$tmp_cmd_output")
    echo '{"status":"success",'\
          '"time":"'"$time_seconds"'",'\
          '"language":"'"$language"'",'\
          '"output":"'"$output"'",'\
          '"unit":"second"}'
    rm $tmp_time $tmp_cmd_output
}

error () {
    echo '{"status":"fail",'\
          '"message": "'"$*"'"}'
}

# get compiled executables ready
exe_go=$(compile:go hello.go)
exe_gcc=$(compile:gcc hello.c)
exe_haskell=$(compile:haskell hello.hs)
exe_vala=$(compile:vala hello.vala)
exe_folder_java=$(compile:java hello.java)
exe_rust=$(compile:rust hello.rs)

# interpreted languages
report_time python python -c 'print("hello")'
report_time perl perl -e 'print("hello\n")'
report_time ruby ruby -e 'puts "hello"'
report_time lua lua -e 'print("hello")'
# shell
report_time bash bash -c 'echo "hello"'
report_time fish fish -c 'echo "hello"'

# lisp family
report_time racket racket -e '(displayln "hello")'
report_time guile guile -c '(display "hello\n")'
report_time sbcl sbcl --noinform --non-interactive --eval '(format t "hello~%")'
report_time clisp clisp -q -x '(format t "hello~%")'
report_time "emacs lisp" emacs -batch -eval '(princ "hello\n")'

report_time clojure clojure -e '(println "hello")'

# js family
report_time node node --eval 'console.log("hello");'
report_time gjs gjs -c 'print("hello");'

report_time "go (go run)" go run hello.go # this times the compilation as well

# compiled languages
report_time go "$exe_go"
report_time gcc "$exe_gcc"
report_time haskell "$exe_haskell"
report_time vala "$exe_vala"
report_time java java -cp "$exe_folder_java" hello
report_time rust "$exe_rust"

# clean up compiled artifacts
rm "$exe_rust" "$exe_go" "$exe_gcc" "$exe_haskell" "$exe_vala" "$exe_folder_java" -rf
